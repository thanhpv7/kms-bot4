###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type HealthFacility {
	id: ID
	created: String
	modified: String
	address: String
	city: String
	country: String
	email: String
	emailPOC: String
	firstName: String
	healthFacilityID: String
	healthFacilityName: String
	healthFacilityType: String
	lastName: String
	mobilePhoneNumber: String
	mobilePhoneNumberPOC: String
	phoneNumber: String
	phoneNumberPOC: String
	postCode: String
	province: String
	salutation: String
	website: String
	
	dismissalReferringFacility: [Registration]
	referringFacility: [Registration]
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type HealthFacilityAudit {
	entity: HealthFacility
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input HealthFacilityInput {
	id: ID
	created: String
	modified: String
	address: String
	city: String
	country: String
	email: String
	emailPOC: String
	firstName: String
	healthFacilityID: String
	healthFacilityName: String
	healthFacilityType: String
	lastName: String
	mobilePhoneNumber: String
	mobilePhoneNumberPOC: String
	phoneNumber: String
	phoneNumberPOC: String
	postCode: String
	province: String
	salutation: String
	website: String
	
	dismissalReferringFacility: [RegistrationInput]
	dismissalReferringFacilityIds: [ID!]
	referringFacility: [RegistrationInput]
	referringFacilityIds: [ID!]
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countHealthFacilitys(where: [[Where!]!]): Int!
	lastHealthFacilitys(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [HealthFacility!]!
	healthFacilitys(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [HealthFacility!]!
	healthFacilityById(id: ID!): HealthFacility
	healthFacilityAudits: [HealthFacilityAudit!]!
	healthFacilityAuditsByEntityId(healthFacilityId: ID!): [HealthFacilityAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createHealthFacility(healthFacility: HealthFacilityInput!, persistRelations: Boolean): HealthFacility!
	createAllHealthFacility(healthFacilitys: [HealthFacilityInput!]!): [HealthFacility!]!
	updateHealthFacility(healthFacility: HealthFacilityInput!, persistRelations: Boolean): HealthFacility!
	updateAllHealthFacility(healthFacilitys: [HealthFacilityInput!]!): [HealthFacility!]!
	deleteHealthFacilityById(healthFacilityId: ID!): ID!
	deleteAllHealthFacilityByIds(healthFacilityIds: [ID!]!): [ID!]!
	deleteHealthFacilityExcludingIds(healthFacilityIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
