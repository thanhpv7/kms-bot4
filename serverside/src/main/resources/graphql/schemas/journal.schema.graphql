###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type Journal {
	id: ID
	created: String
	modified: String
	accountNumber: String
	credit: Float
	customerName: String
	customerNumber: String
	debit: Float
	description: String
	journalNumber: String
	postingDateTime: String
	postingStatus: String
	referenceNumber: String
	revenueCenter: String
	supplierName: String
	supplierNumber: String
	transactionDate: String
	transactionDetailType: String
	transactionType: String
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type JournalAudit {
	entity: Journal
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input JournalInput {
	id: ID
	created: String
	modified: String
	accountNumber: String
	credit: Float
	customerName: String
	customerNumber: String
	debit: Float
	description: String
	journalNumber: String
	postingDateTime: String
	postingStatus: String
	referenceNumber: String
	revenueCenter: String
	supplierName: String
	supplierNumber: String
	transactionDate: String
	transactionDetailType: String
	transactionType: String
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countJournals(where: [[Where!]!]): Int!
	lastJournals(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [Journal!]!
	journals(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [Journal!]!
	journalById(id: ID!): Journal
	journalAudits: [JournalAudit!]!
	journalAuditsByEntityId(journalId: ID!): [JournalAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createJournal(journal: JournalInput!, persistRelations: Boolean): Journal!
	createAllJournal(journals: [JournalInput!]!): [Journal!]!
	updateJournal(journal: JournalInput!, persistRelations: Boolean): Journal!
	updateAllJournal(journals: [JournalInput!]!): [Journal!]!
	deleteJournalById(journalId: ID!): ID!
	deleteAllJournalByIds(journalIds: [ID!]!): [ID!]!
	deleteJournalExcludingIds(journalIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
