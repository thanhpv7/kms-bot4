###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type NewbornDetail {
	id: ID
	created: String
	modified: String
	apgar1MinuteActivity: String
	apgar1MinuteAppearance: String
	apgar1MinuteGrimace: String
	apgar1MinutePulse: String
	apgar1MinuteRespiration: String
	apgar1MinuteScore: String
	apgar10MinuteActivity: String
	apgar10MinuteAppearance: String
	apgar10MinuteGrimace: String
	apgar10MinutePulse: String
	apgar10MinuteRespiration: String
	apgar10MinuteScore: String
	apgar5MinuteActivity: String
	apgar5MinuteAppearance: String
	apgar5MinuteGrimace: String
	apgar5MinutePulse: String
	apgar5MinuteRespiration: String
	apgar5MinuteScore: String
	birthCondition: String
	chestCircumference: Int
	congenitalCondition: String
	dateTimeOfBirth: String
	deliveryType: String
	deliveryTypeIndication: String
	gender: String
	headCircumference: Int
	length: Int
	neonatalCase: String
	newbornFirstName: String
	newbornLastName: String
	patientId: String
	pediatricNurse: String
	physicalExamination: String
	registrationId: String
	weight: Int
	weightOfGestationalAge: String
	deliveryMedicalExaminationRecord: DeliveryMedicalExaminationRecord
	staff: Staff
	vitalSigns: [VitalSigns]
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type NewbornDetailAudit {
	entity: NewbornDetail
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input NewbornDetailInput {
	id: ID
	created: String
	modified: String
	apgar1MinuteActivity: String
	apgar1MinuteAppearance: String
	apgar1MinuteGrimace: String
	apgar1MinutePulse: String
	apgar1MinuteRespiration: String
	apgar1MinuteScore: String
	apgar10MinuteActivity: String
	apgar10MinuteAppearance: String
	apgar10MinuteGrimace: String
	apgar10MinutePulse: String
	apgar10MinuteRespiration: String
	apgar10MinuteScore: String
	apgar5MinuteActivity: String
	apgar5MinuteAppearance: String
	apgar5MinuteGrimace: String
	apgar5MinutePulse: String
	apgar5MinuteRespiration: String
	apgar5MinuteScore: String
	birthCondition: String
	chestCircumference: Int
	congenitalCondition: String
	dateTimeOfBirth: String
	deliveryType: String
	deliveryTypeIndication: String
	gender: String
	headCircumference: Int
	length: Int
	neonatalCase: String
	newbornFirstName: String
	newbornLastName: String
	patientId: String
	pediatricNurse: String
	physicalExamination: String
	registrationId: String
	weight: Int
	weightOfGestationalAge: String
	deliveryMedicalExaminationRecord: DeliveryMedicalExaminationRecordInput
	deliveryMedicalExaminationRecordId: ID
	staff: StaffInput
	staffId: ID
	vitalSigns: [VitalSignsInput]
	vitalSignsIds: [ID!]
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countNewbornDetails(where: [[Where!]!]): Int!
	lastNewbornDetails(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [NewbornDetail!]!
	newbornDetails(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [NewbornDetail!]!
	newbornDetailById(id: ID!): NewbornDetail
	newbornDetailAudits: [NewbornDetailAudit!]!
	newbornDetailAuditsByEntityId(newbornDetailId: ID!): [NewbornDetailAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createNewbornDetail(newbornDetail: NewbornDetailInput!, persistRelations: Boolean): NewbornDetail!
	createAllNewbornDetail(newbornDetails: [NewbornDetailInput!]!): [NewbornDetail!]!
	updateNewbornDetail(newbornDetail: NewbornDetailInput!, persistRelations: Boolean): NewbornDetail!
	updateAllNewbornDetail(newbornDetails: [NewbornDetailInput!]!): [NewbornDetail!]!
	deleteNewbornDetailById(newbornDetailId: ID!): ID!
	deleteAllNewbornDetailByIds(newbornDetailIds: [ID!]!): [ID!]!
	deleteNewbornDetailExcludingIds(newbornDetailIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
