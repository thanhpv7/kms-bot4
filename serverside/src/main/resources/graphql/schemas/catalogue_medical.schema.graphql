###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type CatalogueMedical {
	id: ID
	created: String
	modified: String
	approvalNotes: String
	canBePrescribed: Boolean
	composition: String
	compoundChargingRounding: Boolean
	compoundChargingRoundingAmount: String
	consumptionMethod: String
	consumptionUnit: String
	inventoryRounding: Boolean
	inventoryRoundingAmount: Float
	isGeneric: Boolean
	isHospitalFormulary: Boolean
	isRestricted: Boolean
	isVaccine: Boolean
	vaccineType: String
	stockCatalogue: StockCatalogue
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type CatalogueMedicalAudit {
	entity: CatalogueMedical
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input CatalogueMedicalInput {
	id: ID
	created: String
	modified: String
	approvalNotes: String
	canBePrescribed: Boolean
	composition: String
	compoundChargingRounding: Boolean
	compoundChargingRoundingAmount: String
	consumptionMethod: String
	consumptionUnit: String
	inventoryRounding: Boolean
	inventoryRoundingAmount: Float
	isGeneric: Boolean
	isHospitalFormulary: Boolean
	isRestricted: Boolean
	isVaccine: Boolean
	vaccineType: String
	stockCatalogue: StockCatalogueInput
	stockCatalogueId: ID
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countCatalogueMedicals(where: [[Where!]!]): Int!
	lastCatalogueMedicals(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [CatalogueMedical!]!
	catalogueMedicals(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [CatalogueMedical!]!
	catalogueMedicalById(id: ID!): CatalogueMedical
	catalogueMedicalAudits: [CatalogueMedicalAudit!]!
	catalogueMedicalAuditsByEntityId(catalogueMedicalId: ID!): [CatalogueMedicalAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createCatalogueMedical(catalogueMedical: CatalogueMedicalInput!, persistRelations: Boolean): CatalogueMedical!
	createAllCatalogueMedical(catalogueMedicals: [CatalogueMedicalInput!]!): [CatalogueMedical!]!
	updateCatalogueMedical(catalogueMedical: CatalogueMedicalInput!, persistRelations: Boolean): CatalogueMedical!
	updateAllCatalogueMedical(catalogueMedicals: [CatalogueMedicalInput!]!): [CatalogueMedical!]!
	deleteCatalogueMedicalById(catalogueMedicalId: ID!): ID!
	deleteAllCatalogueMedicalByIds(catalogueMedicalIds: [ID!]!): [ID!]!
	deleteCatalogueMedicalExcludingIds(catalogueMedicalIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
