###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type TransactionDetailTypeMapping {
	id: ID
	created: String
	modified: String
	transactionType: String
	transactionDetailType: TransactionDetailType
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type TransactionDetailTypeMappingAudit {
	entity: TransactionDetailTypeMapping
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input TransactionDetailTypeMappingInput {
	id: ID
	created: String
	modified: String
	transactionType: String
	transactionDetailType: TransactionDetailTypeInput
	transactionDetailTypeId: ID
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countTransactionDetailTypeMappings(where: [[Where!]!]): Int!
	lastTransactionDetailTypeMappings(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [TransactionDetailTypeMapping!]!
	transactionDetailTypeMappings(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [TransactionDetailTypeMapping!]!
	transactionDetailTypeMappingById(id: ID!): TransactionDetailTypeMapping
	transactionDetailTypeMappingAudits: [TransactionDetailTypeMappingAudit!]!
	transactionDetailTypeMappingAuditsByEntityId(transactionDetailTypeMappingId: ID!): [TransactionDetailTypeMappingAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createTransactionDetailTypeMapping(transactionDetailTypeMapping: TransactionDetailTypeMappingInput!, persistRelations: Boolean): TransactionDetailTypeMapping!
	createAllTransactionDetailTypeMapping(transactionDetailTypeMappings: [TransactionDetailTypeMappingInput!]!): [TransactionDetailTypeMapping!]!
	updateTransactionDetailTypeMapping(transactionDetailTypeMapping: TransactionDetailTypeMappingInput!, persistRelations: Boolean): TransactionDetailTypeMapping!
	updateAllTransactionDetailTypeMapping(transactionDetailTypeMappings: [TransactionDetailTypeMappingInput!]!): [TransactionDetailTypeMapping!]!
	deleteTransactionDetailTypeMappingById(transactionDetailTypeMappingId: ID!): ID!
	deleteAllTransactionDetailTypeMappingByIds(transactionDetailTypeMappingIds: [ID!]!): [ID!]!
	deleteTransactionDetailTypeMappingExcludingIds(transactionDetailTypeMappingIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
