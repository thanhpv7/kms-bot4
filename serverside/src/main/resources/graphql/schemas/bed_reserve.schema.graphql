###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type BedReserve {
	id: ID
	created: String
	modified: String
	notes: String
	bedFacility: BedFacility
	registration: Registration
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type BedReserveAudit {
	entity: BedReserve
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input BedReserveInput {
	id: ID
	created: String
	modified: String
	notes: String
	bedFacility: BedFacilityInput
	bedFacilityId: ID
	registration: RegistrationInput
	registrationId: ID
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countBedReserves(where: [[Where!]!]): Int!
	lastBedReserves(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [BedReserve!]!
	bedReserves(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [BedReserve!]!
	bedReserveById(id: ID!): BedReserve
	bedReserveAudits: [BedReserveAudit!]!
	bedReserveAuditsByEntityId(bedReserveId: ID!): [BedReserveAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createBedReserve(bedReserve: BedReserveInput!, persistRelations: Boolean): BedReserve!
	createAllBedReserve(bedReserves: [BedReserveInput!]!): [BedReserve!]!
	updateBedReserve(bedReserve: BedReserveInput!, persistRelations: Boolean): BedReserve!
	updateAllBedReserve(bedReserves: [BedReserveInput!]!): [BedReserve!]!
	deleteBedReserveById(bedReserveId: ID!): ID!
	deleteAllBedReserveByIds(bedReserveIds: [ID!]!): [ID!]!
	deleteBedReserveExcludingIds(bedReserveIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
