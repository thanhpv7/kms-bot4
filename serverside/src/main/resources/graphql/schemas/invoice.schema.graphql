###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type Invoice {
	id: ID
	created: String
	modified: String
	admissionDate: String
	billingLocation: String
	cancelDate: String
	claimNo: String
	dischargedDate: String
	displayDoctorOnPrint: Boolean
	displayICD10OnPrint: Boolean
	displayICD9CMOnPrint: Boolean
	doctorCode: String
	invoiceDate: String
	invoiceNumber: String
	invoiceStatus: String
	invoiceType: String
	notes: String
	patientPaymentType: String
	revisionNumber: Int
	treatmentClass: String
	verificationDate: String
	medicationHeader: MedicationHeader
	icd10: DiagnosesAndProcedures
	icd9CM: DiagnosesAndProcedures
	bedFacility: BedFacility
	patientVisit: PatientVisit
	tariffSchema: TariffSchema
	verifiedBy: Staff
	invoiceItems: [InvoiceItem]
	invoicePaymentInsurances: [InvoicePaymentInsurance]
	invoicePaymentOther: InvoicePaymentOther
	invoicePaymentSelfPaying: InvoicePaymentSelfPaying
	invoiceSummary: InvoiceSummary
	prescriptionHeader: PrescriptionHeader
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type InvoiceAudit {
	entity: Invoice
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input InvoiceInput {
	id: ID
	created: String
	modified: String
	admissionDate: String
	billingLocation: String
	cancelDate: String
	claimNo: String
	dischargedDate: String
	displayDoctorOnPrint: Boolean
	displayICD10OnPrint: Boolean
	displayICD9CMOnPrint: Boolean
	doctorCode: String
	invoiceDate: String
	invoiceNumber: String
	invoiceStatus: String
	invoiceType: String
	notes: String
	patientPaymentType: String
	revisionNumber: Int
	treatmentClass: String
	verificationDate: String
	medicationHeader: MedicationHeaderInput
	medicationHeaderId: ID
	icd10: DiagnosesAndProceduresInput
	icd10Id: ID
	icd9CM: DiagnosesAndProceduresInput
	icd9CMId: ID
	bedFacility: BedFacilityInput
	bedFacilityId: ID
	patientVisit: PatientVisitInput
	patientVisitId: ID
	tariffSchema: TariffSchemaInput
	tariffSchemaId: ID
	verifiedBy: StaffInput
	verifiedById: ID
	invoiceItems: [InvoiceItemInput]
	invoiceItemsIds: [ID!]
	invoicePaymentInsurances: [InvoicePaymentInsuranceInput]
	invoicePaymentInsurancesIds: [ID!]
	invoicePaymentOther: InvoicePaymentOtherInput
	invoicePaymentOtherId: ID
	invoicePaymentSelfPaying: InvoicePaymentSelfPayingInput
	invoicePaymentSelfPayingId: ID
	invoiceSummary: InvoiceSummaryInput
	invoiceSummaryId: ID
	prescriptionHeader: PrescriptionHeaderInput
	prescriptionHeaderId: ID
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countInvoices(where: [[Where!]!]): Int!
	lastInvoices(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [Invoice!]!
	invoices(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [Invoice!]!
	invoiceById(id: ID!): Invoice
	invoiceAudits: [InvoiceAudit!]!
	invoiceAuditsByEntityId(invoiceId: ID!): [InvoiceAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createInvoice(invoice: InvoiceInput!, persistRelations: Boolean): Invoice!
	createAllInvoice(invoices: [InvoiceInput!]!): [Invoice!]!
	updateInvoice(invoice: InvoiceInput!, persistRelations: Boolean): Invoice!
	updateAllInvoice(invoices: [InvoiceInput!]!): [Invoice!]!
	deleteInvoiceById(invoiceId: ID!): ID!
	deleteAllInvoiceByIds(invoiceIds: [ID!]!): [ID!]!
	deleteInvoiceExcludingIds(invoiceIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
