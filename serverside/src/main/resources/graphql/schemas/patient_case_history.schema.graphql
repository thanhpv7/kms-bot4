###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type PatientCaseHistory {
	id: ID
	created: String
	modified: String
	allergy: String
	caseHistoryDateTime: String
	disabilityNotes: String
	familyHistory: String
	historyOfDisease: String
	nutritionHIstory: String
	patientHabits: String
	patientGeneralInformation: PatientGeneralInfo
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type PatientCaseHistoryAudit {
	entity: PatientCaseHistory
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input PatientCaseHistoryInput {
	id: ID
	created: String
	modified: String
	allergy: String
	caseHistoryDateTime: String
	disabilityNotes: String
	familyHistory: String
	historyOfDisease: String
	nutritionHIstory: String
	patientHabits: String
	patientGeneralInformation: PatientGeneralInfoInput
	patientGeneralInformationId: ID
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countPatientCaseHistorys(where: [[Where!]!]): Int!
	lastPatientCaseHistorys(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [PatientCaseHistory!]!
	patientCaseHistorys(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [PatientCaseHistory!]!
	patientCaseHistoryById(id: ID!): PatientCaseHistory
	patientCaseHistoryAudits: [PatientCaseHistoryAudit!]!
	patientCaseHistoryAuditsByEntityId(patientCaseHistoryId: ID!): [PatientCaseHistoryAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createPatientCaseHistory(patientCaseHistory: PatientCaseHistoryInput!, persistRelations: Boolean): PatientCaseHistory!
	createAllPatientCaseHistory(patientCaseHistorys: [PatientCaseHistoryInput!]!): [PatientCaseHistory!]!
	updatePatientCaseHistory(patientCaseHistory: PatientCaseHistoryInput!, persistRelations: Boolean): PatientCaseHistory!
	updateAllPatientCaseHistory(patientCaseHistorys: [PatientCaseHistoryInput!]!): [PatientCaseHistory!]!
	deletePatientCaseHistoryById(patientCaseHistoryId: ID!): ID!
	deleteAllPatientCaseHistoryByIds(patientCaseHistoryIds: [ID!]!): [ID!]!
	deletePatientCaseHistoryExcludingIds(patientCaseHistoryIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
