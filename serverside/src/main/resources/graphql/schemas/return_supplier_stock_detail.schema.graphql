###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type ReturnSupplierStockDetail {
	id: ID
	created: String
	modified: String
	availableQuantity: Float
	availableQuantityReturned: Float
	discountInPercent: Boolean
	discountValue: Float
	itemNotes: String
	itemPrice: Float
	previousQuantityReturned: Float
	price: Float
	quantityOrdered: Float
	quantityReceived: Float
	taxable: Boolean
	uop: String
	returnSupplier: ReturnSupplier
	stockCatalogue: StockCatalogue
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type ReturnSupplierStockDetailAudit {
	entity: ReturnSupplierStockDetail
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input ReturnSupplierStockDetailInput {
	id: ID
	created: String
	modified: String
	availableQuantity: Float
	availableQuantityReturned: Float
	discountInPercent: Boolean
	discountValue: Float
	itemNotes: String
	itemPrice: Float
	previousQuantityReturned: Float
	price: Float
	quantityOrdered: Float
	quantityReceived: Float
	taxable: Boolean
	uop: String
	returnSupplier: ReturnSupplierInput
	returnSupplierId: ID
	stockCatalogue: StockCatalogueInput
	stockCatalogueId: ID
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countReturnSupplierStockDetails(where: [[Where!]!]): Int!
	lastReturnSupplierStockDetails(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [ReturnSupplierStockDetail!]!
	returnSupplierStockDetails(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [ReturnSupplierStockDetail!]!
	returnSupplierStockDetailById(id: ID!): ReturnSupplierStockDetail
	returnSupplierStockDetailAudits: [ReturnSupplierStockDetailAudit!]!
	returnSupplierStockDetailAuditsByEntityId(returnSupplierStockDetailId: ID!): [ReturnSupplierStockDetailAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createReturnSupplierStockDetail(returnSupplierStockDetail: ReturnSupplierStockDetailInput!, persistRelations: Boolean): ReturnSupplierStockDetail!
	createAllReturnSupplierStockDetail(returnSupplierStockDetails: [ReturnSupplierStockDetailInput!]!): [ReturnSupplierStockDetail!]!
	updateReturnSupplierStockDetail(returnSupplierStockDetail: ReturnSupplierStockDetailInput!, persistRelations: Boolean): ReturnSupplierStockDetail!
	updateAllReturnSupplierStockDetail(returnSupplierStockDetails: [ReturnSupplierStockDetailInput!]!): [ReturnSupplierStockDetail!]!
	deleteReturnSupplierStockDetailById(returnSupplierStockDetailId: ID!): ID!
	deleteAllReturnSupplierStockDetailByIds(returnSupplierStockDetailIds: [ID!]!): [ID!]!
	deleteReturnSupplierStockDetailExcludingIds(returnSupplierStockDetailIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
