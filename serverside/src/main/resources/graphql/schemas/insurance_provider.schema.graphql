###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type InsuranceProvider {
	id: ID
	created: String
	modified: String
	benefitProvider: String
	createdDate: String
	email: String
	expiringDate: String
	expiryDate: String
	firstName: String
	lastName: String
	mobilePhoneNumber: String
	notes: String
	phoneNumber: String
	providerCode: String
	providerName: String
	providerType: String
	
	insuranceBenefitPlans: [InsuranceBenefitPlan]
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type InsuranceProviderAudit {
	entity: InsuranceProvider
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input InsuranceProviderInput {
	id: ID
	created: String
	modified: String
	benefitProvider: String
	createdDate: String
	email: String
	expiringDate: String
	expiryDate: String
	firstName: String
	lastName: String
	mobilePhoneNumber: String
	notes: String
	phoneNumber: String
	providerCode: String
	providerName: String
	providerType: String
	
	insuranceBenefitPlans: [InsuranceBenefitPlanInput]
	insuranceBenefitPlansIds: [ID!]
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countInsuranceProviders(where: [[Where!]!]): Int!
	lastInsuranceProviders(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [InsuranceProvider!]!
	insuranceProviders(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [InsuranceProvider!]!
	insuranceProviderById(id: ID!): InsuranceProvider
	insuranceProviderAudits: [InsuranceProviderAudit!]!
	insuranceProviderAuditsByEntityId(insuranceProviderId: ID!): [InsuranceProviderAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createInsuranceProvider(insuranceProvider: InsuranceProviderInput!, persistRelations: Boolean): InsuranceProvider!
	createAllInsuranceProvider(insuranceProviders: [InsuranceProviderInput!]!): [InsuranceProvider!]!
	updateInsuranceProvider(insuranceProvider: InsuranceProviderInput!, persistRelations: Boolean): InsuranceProvider!
	updateAllInsuranceProvider(insuranceProviders: [InsuranceProviderInput!]!): [InsuranceProvider!]!
	deleteInsuranceProviderById(insuranceProviderId: ID!): ID!
	deleteAllInsuranceProviderByIds(insuranceProviderIds: [ID!]!): [ID!]!
	deleteInsuranceProviderExcludingIds(insuranceProviderIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
