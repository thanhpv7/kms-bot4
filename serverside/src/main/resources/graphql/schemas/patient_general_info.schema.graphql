###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type PatientGeneralInfo {
	id: ID
	created: String
	modified: String
	address: String
	dateOfBirth: String
	gender: String
	givenName: String
	hasOutstandingPayment: Boolean
	importantNotes: String
	lastName: String
	patientID: String
	patientPaymentType: String
	patientPicture: [File!]
	placeOfBirth: String
	title: String
	
	bpjsClaimSubmissions: [BpjsClaimSubmission]
	cashRefunds: [CashRefund]
	informedConsents: [InformedConsent]
	invoiceReceipts: [CashReceipt]
	patientCaseHistories: [PatientCaseHistory]
	patientConsents: [PatientConsent]
	patientContactInformation: PatientContactInfo
	patientDetailAddress: PatientDetailAddress
	patientDetail: PatientDetail
	patientEmergencyContactDetail: PatientEmergencyContactDetail
	patientEmploymentDetail: PatientEmploymentDetail
	patientFinalizeProfiles: [PatientSupportingDocument]
	patientPaymentBPJS: PatientPaymentBPJS
	patientPaymentTypeInsurance: PatientPaymentInsurance
	patientPaymentTypeOthers: PatientPaymentOthers
	patientPersonalInformation: PatientPersonalInfo
	patientSelfPaying: PatientPaymentSelfPaying
	retailPharmacies: [RetailPharmacy]
	visits: [PatientVisit]
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type PatientGeneralInfoAudit {
	entity: PatientGeneralInfo
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input PatientGeneralInfoInput {
	id: ID
	created: String
	modified: String
	address: String
	dateOfBirth: String
	gender: String
	givenName: String
	hasOutstandingPayment: Boolean
	importantNotes: String
	lastName: String
	patientID: String
	patientPaymentType: String
	placeOfBirth: String
	title: String
	patientPicture: [FileInput!]
	
	bpjsClaimSubmissions: [BpjsClaimSubmissionInput]
	bpjsClaimSubmissionsIds: [ID!]
	cashRefunds: [CashRefundInput]
	cashRefundsIds: [ID!]
	informedConsents: [InformedConsentInput]
	informedConsentsIds: [ID!]
	invoiceReceipts: [CashReceiptInput]
	invoiceReceiptsIds: [ID!]
	patientCaseHistories: [PatientCaseHistoryInput]
	patientCaseHistoriesIds: [ID!]
	patientConsents: [PatientConsentInput]
	patientConsentsIds: [ID!]
	patientContactInformation: PatientContactInfoInput
	patientContactInformationId: ID
	patientDetailAddress: PatientDetailAddressInput
	patientDetailAddressId: ID
	patientDetail: PatientDetailInput
	patientDetailId: ID
	patientEmergencyContactDetail: PatientEmergencyContactDetailInput
	patientEmergencyContactDetailId: ID
	patientEmploymentDetail: PatientEmploymentDetailInput
	patientEmploymentDetailId: ID
	patientFinalizeProfiles: [PatientSupportingDocumentInput]
	patientFinalizeProfilesIds: [ID!]
	patientPaymentBPJS: PatientPaymentBPJSInput
	patientPaymentBPJSId: ID
	patientPaymentTypeInsurance: PatientPaymentInsuranceInput
	patientPaymentTypeInsuranceId: ID
	patientPaymentTypeOthers: PatientPaymentOthersInput
	patientPaymentTypeOthersId: ID
	patientPersonalInformation: PatientPersonalInfoInput
	patientPersonalInformationId: ID
	patientSelfPaying: PatientPaymentSelfPayingInput
	patientSelfPayingId: ID
	retailPharmacies: [RetailPharmacyInput]
	retailPharmaciesIds: [ID!]
	visits: [PatientVisitInput]
	visitsIds: [ID!]
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countPatientGeneralInfos(where: [[Where!]!]): Int!
	lastPatientGeneralInfos(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [PatientGeneralInfo!]!
	patientGeneralInfos(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [PatientGeneralInfo!]!
	patientGeneralInfoById(id: ID!): PatientGeneralInfo
	patientGeneralInfoAudits: [PatientGeneralInfoAudit!]!
	patientGeneralInfoAuditsByEntityId(patientGeneralInfoId: ID!): [PatientGeneralInfoAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createPatientGeneralInfo(patientGeneralInfo: PatientGeneralInfoInput!, persistRelations: Boolean): PatientGeneralInfo!
	createAllPatientGeneralInfo(patientGeneralInfos: [PatientGeneralInfoInput!]!): [PatientGeneralInfo!]!
	updatePatientGeneralInfo(patientGeneralInfo: PatientGeneralInfoInput!, persistRelations: Boolean): PatientGeneralInfo!
	updateAllPatientGeneralInfo(patientGeneralInfos: [PatientGeneralInfoInput!]!): [PatientGeneralInfo!]!
	deletePatientGeneralInfoById(patientGeneralInfoId: ID!): ID!
	deleteAllPatientGeneralInfoByIds(patientGeneralInfoIds: [ID!]!): [ID!]!
	deletePatientGeneralInfoExcludingIds(patientGeneralInfoIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
