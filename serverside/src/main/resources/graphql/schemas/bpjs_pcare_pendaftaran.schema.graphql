###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type BpjsPcarePendaftaran {
	id: ID
	created: String
	modified: String
	aktif: String
	asuransi: String
	beratbadan: String
	diastole: String
	goldarah: String
	heartrate: String
	hubungankeluarga: String
	jnskelas: String
	jnspeserta: String
	kdasuransi: String
	kdpoli: String
	kdprovidergigi: String
	kdproviderpelayanan: String
	kdproviderpst: String
	kdtkp: String
	keluhan: String
	ketaktif: String
	kodekls: String
	kodepeserta: String
	kunjsakit: String
	lingkarperut: String
	nama: String
	namakls: String
	namapeserta: String
	nmasuransi: String
	nmpoli: String
	nmprovidergigi: String
	nmproviderpelayanan: String
	nmproviderpst: String
	nmtkp: String
	noasuransi: String
	nohp: String
	noktp: String
	nokartu: String
	nourut: String
	polisakit: String
	providerpelayanan: String
	resprate: String
	sex: String
	sistole: String
	status: String
	tglakhirberlaku: String
	tgllahir: String
	tglmulaiaktif: String
	tgldaftar: String
	tinggibadan: String
	patientVisit: PatientVisit
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type BpjsPcarePendaftaranAudit {
	entity: BpjsPcarePendaftaran
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input BpjsPcarePendaftaranInput {
	id: ID
	created: String
	modified: String
	aktif: String
	asuransi: String
	beratbadan: String
	diastole: String
	goldarah: String
	heartrate: String
	hubungankeluarga: String
	jnskelas: String
	jnspeserta: String
	kdasuransi: String
	kdpoli: String
	kdprovidergigi: String
	kdproviderpelayanan: String
	kdproviderpst: String
	kdtkp: String
	keluhan: String
	ketaktif: String
	kodekls: String
	kodepeserta: String
	kunjsakit: String
	lingkarperut: String
	nama: String
	namakls: String
	namapeserta: String
	nmasuransi: String
	nmpoli: String
	nmprovidergigi: String
	nmproviderpelayanan: String
	nmproviderpst: String
	nmtkp: String
	noasuransi: String
	nohp: String
	noktp: String
	nokartu: String
	nourut: String
	polisakit: String
	providerpelayanan: String
	resprate: String
	sex: String
	sistole: String
	status: String
	tglakhirberlaku: String
	tgllahir: String
	tglmulaiaktif: String
	tgldaftar: String
	tinggibadan: String
	patientVisit: PatientVisitInput
	patientVisitId: ID
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countBpjsPcarePendaftarans(where: [[Where!]!]): Int!
	lastBpjsPcarePendaftarans(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [BpjsPcarePendaftaran!]!
	bpjsPcarePendaftarans(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [BpjsPcarePendaftaran!]!
	bpjsPcarePendaftaranById(id: ID!): BpjsPcarePendaftaran
	bpjsPcarePendaftaranAudits: [BpjsPcarePendaftaranAudit!]!
	bpjsPcarePendaftaranAuditsByEntityId(bpjsPcarePendaftaranId: ID!): [BpjsPcarePendaftaranAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createBpjsPcarePendaftaran(bpjsPcarePendaftaran: BpjsPcarePendaftaranInput!, persistRelations: Boolean): BpjsPcarePendaftaran!
	createAllBpjsPcarePendaftaran(bpjsPcarePendaftarans: [BpjsPcarePendaftaranInput!]!): [BpjsPcarePendaftaran!]!
	updateBpjsPcarePendaftaran(bpjsPcarePendaftaran: BpjsPcarePendaftaranInput!, persistRelations: Boolean): BpjsPcarePendaftaran!
	updateAllBpjsPcarePendaftaran(bpjsPcarePendaftarans: [BpjsPcarePendaftaranInput!]!): [BpjsPcarePendaftaran!]!
	deleteBpjsPcarePendaftaranById(bpjsPcarePendaftaranId: ID!): ID!
	deleteAllBpjsPcarePendaftaranByIds(bpjsPcarePendaftaranIds: [ID!]!): [ID!]!
	deleteBpjsPcarePendaftaranExcludingIds(bpjsPcarePendaftaranIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
