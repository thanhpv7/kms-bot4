###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type CashAllocation {
	id: ID
	created: String
	modified: String
	allocatedAmount: Float
	allocatedDate: String
	cashNumber: String
	cashType: String
	outstandingAmount: Float
	sourceAmount: Float
	sourceDate: String
	sourceDocumentType: String
	sourceNumber: String
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type CashAllocationAudit {
	entity: CashAllocation
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input CashAllocationInput {
	id: ID
	created: String
	modified: String
	allocatedAmount: Float
	allocatedDate: String
	cashNumber: String
	cashType: String
	outstandingAmount: Float
	sourceAmount: Float
	sourceDate: String
	sourceDocumentType: String
	sourceNumber: String
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countCashAllocations(where: [[Where!]!]): Int!
	lastCashAllocations(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [CashAllocation!]!
	cashAllocations(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [CashAllocation!]!
	cashAllocationById(id: ID!): CashAllocation
	cashAllocationAudits: [CashAllocationAudit!]!
	cashAllocationAuditsByEntityId(cashAllocationId: ID!): [CashAllocationAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createCashAllocation(cashAllocation: CashAllocationInput!, persistRelations: Boolean): CashAllocation!
	createAllCashAllocation(cashAllocations: [CashAllocationInput!]!): [CashAllocation!]!
	updateCashAllocation(cashAllocation: CashAllocationInput!, persistRelations: Boolean): CashAllocation!
	updateAllCashAllocation(cashAllocations: [CashAllocationInput!]!): [CashAllocation!]!
	deleteCashAllocationById(cashAllocationId: ID!): ID!
	deleteAllCashAllocationByIds(cashAllocationIds: [ID!]!): [ID!]!
	deleteCashAllocationExcludingIds(cashAllocationIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
