###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type TransferOrder {
	id: ID
	created: String
	modified: String
	approvalStatus: String
	expectedDate: String
	issuedDateTime: String
	notes: String
	orderDate: String
	receivedDateTime: String
	referenceDocument: String
	referenceNumber: String
	requiredDate: String
	transactionStatus: String
	transferOrderNumber: String
	voidDate: String
	destinationWarehouse: Warehouse
	sourceWarehouse: Warehouse
	transferOrderStockDetails: [TransferOrderStockDetail]
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type TransferOrderAudit {
	entity: TransferOrder
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input TransferOrderInput {
	id: ID
	created: String
	modified: String
	approvalStatus: String
	expectedDate: String
	issuedDateTime: String
	notes: String
	orderDate: String
	receivedDateTime: String
	referenceDocument: String
	referenceNumber: String
	requiredDate: String
	transactionStatus: String
	transferOrderNumber: String
	voidDate: String
	destinationWarehouse: WarehouseInput
	destinationWarehouseId: ID
	sourceWarehouse: WarehouseInput
	sourceWarehouseId: ID
	transferOrderStockDetails: [TransferOrderStockDetailInput]
	transferOrderStockDetailsIds: [ID!]
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countTransferOrders(where: [[Where!]!]): Int!
	lastTransferOrders(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [TransferOrder!]!
	transferOrders(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [TransferOrder!]!
	transferOrderById(id: ID!): TransferOrder
	transferOrderAudits: [TransferOrderAudit!]!
	transferOrderAuditsByEntityId(transferOrderId: ID!): [TransferOrderAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createTransferOrder(transferOrder: TransferOrderInput!, persistRelations: Boolean): TransferOrder!
	createAllTransferOrder(transferOrders: [TransferOrderInput!]!): [TransferOrder!]!
	updateTransferOrder(transferOrder: TransferOrderInput!, persistRelations: Boolean): TransferOrder!
	updateAllTransferOrder(transferOrders: [TransferOrderInput!]!): [TransferOrder!]!
	deleteTransferOrderById(transferOrderId: ID!): ID!
	deleteAllTransferOrderByIds(transferOrderIds: [ID!]!): [ID!]!
	deleteTransferOrderExcludingIds(transferOrderIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
