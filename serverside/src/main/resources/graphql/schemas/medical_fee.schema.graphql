###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type MedicalFee {
	id: ID
	created: String
	modified: String
	hospitalPrice: Float
	inventoryRoundingValue: Float
	medicalStaffCode: String
	medicationTransactionNumber: String
	name: String
	notes: String
	otherComponentPrice: Float
	pharmacyTransactionNumber: String
	pharmacyTransactionType: String
	quantity: Float
	tariffCode: String
	tariffType: String
	transactionDate: String
	treatmentClass: String
	unit: String
	unitPrice: Float
	medicalFeeStatus: String
	registration: Registration
	warehouse: Warehouse
	invoiceItems: [InvoiceItem]
	medicalFeeItemComponents: [MedicalFeeItemComponent]
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type MedicalFeeAudit {
	entity: MedicalFee
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input MedicalFeeInput {
	id: ID
	created: String
	modified: String
	hospitalPrice: Float
	inventoryRoundingValue: Float
	medicalStaffCode: String
	medicationTransactionNumber: String
	name: String
	notes: String
	otherComponentPrice: Float
	pharmacyTransactionNumber: String
	pharmacyTransactionType: String
	quantity: Float
	tariffCode: String
	tariffType: String
	transactionDate: String
	treatmentClass: String
	unit: String
	unitPrice: Float
	medicalFeeStatus: String
	registration: RegistrationInput
	registrationId: ID
	warehouse: WarehouseInput
	warehouseId: ID
	invoiceItems: [InvoiceItemInput]
	invoiceItemsIds: [ID!]
	medicalFeeItemComponents: [MedicalFeeItemComponentInput]
	medicalFeeItemComponentsIds: [ID!]
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countMedicalFees(where: [[Where!]!]): Int!
	lastMedicalFees(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [MedicalFee!]!
	medicalFees(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [MedicalFee!]!
	medicalFeeById(id: ID!): MedicalFee
	medicalFeeAudits: [MedicalFeeAudit!]!
	medicalFeeAuditsByEntityId(medicalFeeId: ID!): [MedicalFeeAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createMedicalFee(medicalFee: MedicalFeeInput!, persistRelations: Boolean): MedicalFee!
	createAllMedicalFee(medicalFees: [MedicalFeeInput!]!): [MedicalFee!]!
	updateMedicalFee(medicalFee: MedicalFeeInput!, persistRelations: Boolean): MedicalFee!
	updateAllMedicalFee(medicalFees: [MedicalFeeInput!]!): [MedicalFee!]!
	deleteMedicalFeeById(medicalFeeId: ID!): ID!
	deleteAllMedicalFeeByIds(medicalFeeIds: [ID!]!): [ID!]!
	deleteMedicalFeeExcludingIds(medicalFeeIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
