###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type HemodialysisMonitoring {
	id: ID
	created: String
	modified: String
	datetime: String
	diastole: Float
	heartRate: Float
	qb: Float
	qd: Float
	respiratory: Float
	systole: Float
	tmp: Float
	temperature: Float
	temperatureUnit: String
	uf: Float
	ufg: Float
	ufr: Float
	venousPressure: Float
	hemodialysisExamination: HemodialysisExamination
	medicalStaff: Staff
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type HemodialysisMonitoringAudit {
	entity: HemodialysisMonitoring
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input HemodialysisMonitoringInput {
	id: ID
	created: String
	modified: String
	datetime: String
	diastole: Float
	heartRate: Float
	qb: Float
	qd: Float
	respiratory: Float
	systole: Float
	tmp: Float
	temperature: Float
	temperatureUnit: String
	uf: Float
	ufg: Float
	ufr: Float
	venousPressure: Float
	hemodialysisExamination: HemodialysisExaminationInput
	hemodialysisExaminationId: ID
	medicalStaff: StaffInput
	medicalStaffId: ID
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countHemodialysisMonitorings(where: [[Where!]!]): Int!
	lastHemodialysisMonitorings(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [HemodialysisMonitoring!]!
	hemodialysisMonitorings(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [HemodialysisMonitoring!]!
	hemodialysisMonitoringById(id: ID!): HemodialysisMonitoring
	hemodialysisMonitoringAudits: [HemodialysisMonitoringAudit!]!
	hemodialysisMonitoringAuditsByEntityId(hemodialysisMonitoringId: ID!): [HemodialysisMonitoringAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createHemodialysisMonitoring(hemodialysisMonitoring: HemodialysisMonitoringInput!, persistRelations: Boolean): HemodialysisMonitoring!
	createAllHemodialysisMonitoring(hemodialysisMonitorings: [HemodialysisMonitoringInput!]!): [HemodialysisMonitoring!]!
	updateHemodialysisMonitoring(hemodialysisMonitoring: HemodialysisMonitoringInput!, persistRelations: Boolean): HemodialysisMonitoring!
	updateAllHemodialysisMonitoring(hemodialysisMonitorings: [HemodialysisMonitoringInput!]!): [HemodialysisMonitoring!]!
	deleteHemodialysisMonitoringById(hemodialysisMonitoringId: ID!): ID!
	deleteAllHemodialysisMonitoringByIds(hemodialysisMonitoringIds: [ID!]!): [ID!]!
	deleteHemodialysisMonitoringExcludingIds(hemodialysisMonitoringIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
