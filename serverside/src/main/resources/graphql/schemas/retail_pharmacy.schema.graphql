###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type RetailPharmacy {
	id: ID
	created: String
	modified: String
	address: String
	customerName: String
	customerType: String
	notes: String
	paymentStatus: String
	phoneNumber: String
	retailNumber: String
	status: String
	totalPrice: Float
	patientGeneralInfo: PatientGeneralInfo
	warehouse: Warehouse
	retailPharmacyInvoices: [RetailPharmacyInvoice]
	retailPharmacyStockDetails: [RetailPharmacyStockDetail]
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type RetailPharmacyAudit {
	entity: RetailPharmacy
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input RetailPharmacyInput {
	id: ID
	created: String
	modified: String
	address: String
	customerName: String
	customerType: String
	notes: String
	paymentStatus: String
	phoneNumber: String
	retailNumber: String
	status: String
	totalPrice: Float
	patientGeneralInfo: PatientGeneralInfoInput
	patientGeneralInfoId: ID
	warehouse: WarehouseInput
	warehouseId: ID
	retailPharmacyInvoices: [RetailPharmacyInvoiceInput]
	retailPharmacyInvoicesIds: [ID!]
	retailPharmacyStockDetails: [RetailPharmacyStockDetailInput]
	retailPharmacyStockDetailsIds: [ID!]
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countRetailPharmacys(where: [[Where!]!]): Int!
	lastRetailPharmacys(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [RetailPharmacy!]!
	retailPharmacys(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [RetailPharmacy!]!
	retailPharmacyById(id: ID!): RetailPharmacy
	retailPharmacyAudits: [RetailPharmacyAudit!]!
	retailPharmacyAuditsByEntityId(retailPharmacyId: ID!): [RetailPharmacyAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createRetailPharmacy(retailPharmacy: RetailPharmacyInput!, persistRelations: Boolean): RetailPharmacy!
	createAllRetailPharmacy(retailPharmacys: [RetailPharmacyInput!]!): [RetailPharmacy!]!
	updateRetailPharmacy(retailPharmacy: RetailPharmacyInput!, persistRelations: Boolean): RetailPharmacy!
	updateAllRetailPharmacy(retailPharmacys: [RetailPharmacyInput!]!): [RetailPharmacy!]!
	deleteRetailPharmacyById(retailPharmacyId: ID!): ID!
	deleteAllRetailPharmacyByIds(retailPharmacyIds: [ID!]!): [ID!]!
	deleteRetailPharmacyExcludingIds(retailPharmacyIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
