###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type StockCatalogue {
	id: ID
	created: String
	modified: String
	approvalDate: String
	approvalNotes: String
	approvalStatus: String
	approvedBy: String
	averageCost: Float
	description: String
	inventoryAccount: String
	lastBuyingPriceVATExcludeCurrency: String
	lastBuyingPriceVATExcludePrice: Float
	lastBuyingPriceVATIncludeCurrency: String
	lastBuyingPriceVATIncludePrice: Float
	lppDiscount: Float
	lppItemPrice: Float
	lppLastPurchaseDate: String
	lppSupplierName: String
	lppUnitPrice: Float
	lupDiscount: Float
	lupItemPrice: Float
	lupLastPurchaseDate: String
	lupSupplierName: String
	lupUnitPrice: Float
	medicalType: Boolean
	onHandQty: Float
	purchaseAccount: String
	quantityPerPack: Int
	salesAccount: String
	stockCategory: String
	stockCategoryVATExcluded: String
	stockCategoryVATIncluded: String
	stockCode: String
	stockGroup: String
	stockName: String
	totalCost: Float
	trackable: Boolean
	uoi: String
	volume: Float
	volumeUnit: String
	weight: Float
	weightUnit: String
	bpjsDrugGenericPRB: BpjsDrugGenericPRB
	bpjsPcareDPHO: BpjsPcareDPHO
	warehouse: Warehouse
	batchStockBalancesCatalogue: [BatchStockBalance]
	batchStockBalances: [BatchStockBalancePerDate]
	batchStockTransactionDetails: [BatchStockTransactionDetail]
	catalogueUOMs: [CatalogueUOM]
	compoundPrescriptionItems: [CompoundPrescriptionItem]
	goodsReceiveNoteBatchs: [GoodsReceiveNoteBatch]
	goodsReceiveNoteItems: [GoodsReceiveNoteItem]
	internalOrderStockDetails: [InternalOrderStockDetail]
	inventoryAdjusmentBatchs: [InventoryAdjusmentBatch]
	inventoryAdjustmentItems: [InventoryAdjustmentItem]
	inventoryBatchCorrectionItems: [InventoryBatchCorrectionItem]
	medicationItems: [MedicationItem]
	prescriptionItem: [PrescriptionItem]
	purchaseOrderStockDetails: [PurchaseOrderStockDetail]
	purchaseRequisitionStockDetails: [PurchaseRequisitionStockDetail]
	retailPharmacyStockDetails: [RetailPharmacyStockDetail]
	returnSupplierStockDetails: [ReturnSupplierStockDetail]
	stockCatalogueMedical: CatalogueMedical
	stockCatalogueNonMedical: CatalogueNonMedical
	stockControls: [StockControl]
	stockTransactionDetails: [StockTransactionDetail]
	stockTransactionPerDateTypes: [StockTransactionPerDateType]
	stockTransactionPerDates: [StockTransactionPerDate]
	supplierProductDetails: [SupplierProductDetail]
	transferOrderStockDetails: [TransferOrderStockDetail]
	vaccinationOrderDetails: [VaccinationOrderDetail]
	warehouseInitialStockS: [WarehouseInitialStock]
	warehouseInventories: [WarehouseInventory]
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type StockCatalogueAudit {
	entity: StockCatalogue
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input StockCatalogueInput {
	id: ID
	created: String
	modified: String
	approvalDate: String
	approvalNotes: String
	approvalStatus: String
	approvedBy: String
	averageCost: Float
	description: String
	inventoryAccount: String
	lastBuyingPriceVATExcludeCurrency: String
	lastBuyingPriceVATExcludePrice: Float
	lastBuyingPriceVATIncludeCurrency: String
	lastBuyingPriceVATIncludePrice: Float
	lppDiscount: Float
	lppItemPrice: Float
	lppLastPurchaseDate: String
	lppSupplierName: String
	lppUnitPrice: Float
	lupDiscount: Float
	lupItemPrice: Float
	lupLastPurchaseDate: String
	lupSupplierName: String
	lupUnitPrice: Float
	medicalType: Boolean
	onHandQty: Float
	purchaseAccount: String
	quantityPerPack: Int
	salesAccount: String
	stockCategory: String
	stockCategoryVATExcluded: String
	stockCategoryVATIncluded: String
	stockCode: String
	stockGroup: String
	stockName: String
	totalCost: Float
	trackable: Boolean
	uoi: String
	volume: Float
	volumeUnit: String
	weight: Float
	weightUnit: String
	bpjsDrugGenericPRB: BpjsDrugGenericPRBInput
	bpjsDrugGenericPRBId: ID
	bpjsPcareDPHO: BpjsPcareDPHOInput
	bpjsPcareDPHOId: ID
	warehouse: WarehouseInput
	warehouseId: ID
	batchStockBalancesCatalogue: [BatchStockBalanceInput]
	batchStockBalancesCatalogueIds: [ID!]
	batchStockBalances: [BatchStockBalancePerDateInput]
	batchStockBalancesIds: [ID!]
	batchStockTransactionDetails: [BatchStockTransactionDetailInput]
	batchStockTransactionDetailsIds: [ID!]
	catalogueUOMs: [CatalogueUOMInput]
	catalogueUOMsIds: [ID!]
	compoundPrescriptionItems: [CompoundPrescriptionItemInput]
	compoundPrescriptionItemsIds: [ID!]
	goodsReceiveNoteBatchs: [GoodsReceiveNoteBatchInput]
	goodsReceiveNoteBatchsIds: [ID!]
	goodsReceiveNoteItems: [GoodsReceiveNoteItemInput]
	goodsReceiveNoteItemsIds: [ID!]
	internalOrderStockDetails: [InternalOrderStockDetailInput]
	internalOrderStockDetailsIds: [ID!]
	inventoryAdjusmentBatchs: [InventoryAdjusmentBatchInput]
	inventoryAdjusmentBatchsIds: [ID!]
	inventoryAdjustmentItems: [InventoryAdjustmentItemInput]
	inventoryAdjustmentItemsIds: [ID!]
	inventoryBatchCorrectionItems: [InventoryBatchCorrectionItemInput]
	inventoryBatchCorrectionItemsIds: [ID!]
	medicationItems: [MedicationItemInput]
	medicationItemsIds: [ID!]
	prescriptionItem: [PrescriptionItemInput]
	prescriptionItemIds: [ID!]
	purchaseOrderStockDetails: [PurchaseOrderStockDetailInput]
	purchaseOrderStockDetailsIds: [ID!]
	purchaseRequisitionStockDetails: [PurchaseRequisitionStockDetailInput]
	purchaseRequisitionStockDetailsIds: [ID!]
	retailPharmacyStockDetails: [RetailPharmacyStockDetailInput]
	retailPharmacyStockDetailsIds: [ID!]
	returnSupplierStockDetails: [ReturnSupplierStockDetailInput]
	returnSupplierStockDetailsIds: [ID!]
	stockCatalogueMedical: CatalogueMedicalInput
	stockCatalogueMedicalId: ID
	stockCatalogueNonMedical: CatalogueNonMedicalInput
	stockCatalogueNonMedicalId: ID
	stockControls: [StockControlInput]
	stockControlsIds: [ID!]
	stockTransactionDetails: [StockTransactionDetailInput]
	stockTransactionDetailsIds: [ID!]
	stockTransactionPerDateTypes: [StockTransactionPerDateTypeInput]
	stockTransactionPerDateTypesIds: [ID!]
	stockTransactionPerDates: [StockTransactionPerDateInput]
	stockTransactionPerDatesIds: [ID!]
	supplierProductDetails: [SupplierProductDetailInput]
	supplierProductDetailsIds: [ID!]
	transferOrderStockDetails: [TransferOrderStockDetailInput]
	transferOrderStockDetailsIds: [ID!]
	vaccinationOrderDetails: [VaccinationOrderDetailInput]
	vaccinationOrderDetailsIds: [ID!]
	warehouseInitialStockS: [WarehouseInitialStockInput]
	warehouseInitialStockSIds: [ID!]
	warehouseInventories: [WarehouseInventoryInput]
	warehouseInventoriesIds: [ID!]
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countStockCatalogues(where: [[Where!]!]): Int!
	lastStockCatalogues(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [StockCatalogue!]!
	stockCatalogues(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [StockCatalogue!]!
	stockCatalogueById(id: ID!): StockCatalogue
	stockCatalogueAudits: [StockCatalogueAudit!]!
	stockCatalogueAuditsByEntityId(stockCatalogueId: ID!): [StockCatalogueAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createStockCatalogue(stockCatalogue: StockCatalogueInput!, persistRelations: Boolean): StockCatalogue!
	createAllStockCatalogue(stockCatalogues: [StockCatalogueInput!]!): [StockCatalogue!]!
	updateStockCatalogue(stockCatalogue: StockCatalogueInput!, persistRelations: Boolean): StockCatalogue!
	updateAllStockCatalogue(stockCatalogues: [StockCatalogueInput!]!): [StockCatalogue!]!
	deleteStockCatalogueById(stockCatalogueId: ID!): ID!
	deleteAllStockCatalogueByIds(stockCatalogueIds: [ID!]!): [ID!]!
	deleteStockCatalogueExcludingIds(stockCatalogueIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
