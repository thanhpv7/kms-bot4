###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type BpjsDoctorSchedule {
	id: ID
	created: String
	modified: String
	hari: Int
	interval: Int
	jknNonQuota: Int
	jknQuota: Int
	jamBuka: String
	jamTutup: String
	kapasitas: Int
	libur: Boolean
	namaHari: String
	kodedokter: String
	kodepoli: String
	kodesubspesialis: String
	namadokter: String
	namapoli: String
	namasubspesialis: String
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type BpjsDoctorScheduleAudit {
	entity: BpjsDoctorSchedule
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input BpjsDoctorScheduleInput {
	id: ID
	created: String
	modified: String
	hari: Int
	interval: Int
	jknNonQuota: Int
	jknQuota: Int
	jamBuka: String
	jamTutup: String
	kapasitas: Int
	libur: Boolean
	namaHari: String
	kodedokter: String
	kodepoli: String
	kodesubspesialis: String
	namadokter: String
	namapoli: String
	namasubspesialis: String
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countBpjsDoctorSchedules(where: [[Where!]!]): Int!
	lastBpjsDoctorSchedules(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [BpjsDoctorSchedule!]!
	bpjsDoctorSchedules(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [BpjsDoctorSchedule!]!
	bpjsDoctorScheduleById(id: ID!): BpjsDoctorSchedule
	bpjsDoctorScheduleAudits: [BpjsDoctorScheduleAudit!]!
	bpjsDoctorScheduleAuditsByEntityId(bpjsDoctorScheduleId: ID!): [BpjsDoctorScheduleAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createBpjsDoctorSchedule(bpjsDoctorSchedule: BpjsDoctorScheduleInput!, persistRelations: Boolean): BpjsDoctorSchedule!
	createAllBpjsDoctorSchedule(bpjsDoctorSchedules: [BpjsDoctorScheduleInput!]!): [BpjsDoctorSchedule!]!
	updateBpjsDoctorSchedule(bpjsDoctorSchedule: BpjsDoctorScheduleInput!, persistRelations: Boolean): BpjsDoctorSchedule!
	updateAllBpjsDoctorSchedule(bpjsDoctorSchedules: [BpjsDoctorScheduleInput!]!): [BpjsDoctorSchedule!]!
	deleteBpjsDoctorScheduleById(bpjsDoctorScheduleId: ID!): ID!
	deleteAllBpjsDoctorScheduleByIds(bpjsDoctorScheduleIds: [ID!]!): [ID!]!
	deleteBpjsDoctorScheduleExcludingIds(bpjsDoctorScheduleIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
