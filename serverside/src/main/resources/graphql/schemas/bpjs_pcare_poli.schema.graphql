###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type BpjsPcarePoli {
	id: ID
	created: String
	modified: String
	kdpoli: String
	nmpoli: String
	polisakit: Boolean
	service: Service
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type BpjsPcarePoliAudit {
	entity: BpjsPcarePoli
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input BpjsPcarePoliInput {
	id: ID
	created: String
	modified: String
	kdpoli: String
	nmpoli: String
	polisakit: Boolean
	service: ServiceInput
	serviceId: ID
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countBpjsPcarePolis(where: [[Where!]!]): Int!
	lastBpjsPcarePolis(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [BpjsPcarePoli!]!
	bpjsPcarePolis(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [BpjsPcarePoli!]!
	bpjsPcarePoliById(id: ID!): BpjsPcarePoli
	bpjsPcarePoliAudits: [BpjsPcarePoliAudit!]!
	bpjsPcarePoliAuditsByEntityId(bpjsPcarePoliId: ID!): [BpjsPcarePoliAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createBpjsPcarePoli(bpjsPcarePoli: BpjsPcarePoliInput!, persistRelations: Boolean): BpjsPcarePoli!
	createAllBpjsPcarePoli(bpjsPcarePolis: [BpjsPcarePoliInput!]!): [BpjsPcarePoli!]!
	updateBpjsPcarePoli(bpjsPcarePoli: BpjsPcarePoliInput!, persistRelations: Boolean): BpjsPcarePoli!
	updateAllBpjsPcarePoli(bpjsPcarePolis: [BpjsPcarePoliInput!]!): [BpjsPcarePoli!]!
	deleteBpjsPcarePoliById(bpjsPcarePoliId: ID!): ID!
	deleteAllBpjsPcarePoliByIds(bpjsPcarePoliIds: [ID!]!): [ID!]!
	deleteBpjsPcarePoliExcludingIds(bpjsPcarePoliIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
