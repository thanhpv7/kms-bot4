###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type RoomFacility {
	id: ID
	created: String
	modified: String
	category: String
	department: String
	genderAllocation: String
	location: String
	notes: String
	roomFacilityPicture: [File!]
	roomName: String
	roomNumber: String
	treatmentClass: String
	
	bedFacilities: [BedFacility]
	operatingRoom: [IntraoperativeRecords]
	preoperativeRooms: [PreoperativeRecords]
	recoveryRooms: [PostOperativeDetails]
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type RoomFacilityAudit {
	entity: RoomFacility
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input RoomFacilityInput {
	id: ID
	created: String
	modified: String
	category: String
	department: String
	genderAllocation: String
	location: String
	notes: String
	roomName: String
	roomNumber: String
	treatmentClass: String
	roomFacilityPicture: [FileInput!]
	
	bedFacilities: [BedFacilityInput]
	bedFacilitiesIds: [ID!]
	operatingRoom: [IntraoperativeRecordsInput]
	operatingRoomIds: [ID!]
	preoperativeRooms: [PreoperativeRecordsInput]
	preoperativeRoomsIds: [ID!]
	recoveryRooms: [PostOperativeDetailsInput]
	recoveryRoomsIds: [ID!]
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countRoomFacilitys(where: [[Where!]!]): Int!
	lastRoomFacilitys(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [RoomFacility!]!
	roomFacilitys(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [RoomFacility!]!
	roomFacilityById(id: ID!): RoomFacility
	roomFacilityAudits: [RoomFacilityAudit!]!
	roomFacilityAuditsByEntityId(roomFacilityId: ID!): [RoomFacilityAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createRoomFacility(roomFacility: RoomFacilityInput!, persistRelations: Boolean): RoomFacility!
	createAllRoomFacility(roomFacilitys: [RoomFacilityInput!]!): [RoomFacility!]!
	updateRoomFacility(roomFacility: RoomFacilityInput!, persistRelations: Boolean): RoomFacility!
	updateAllRoomFacility(roomFacilitys: [RoomFacilityInput!]!): [RoomFacility!]!
	deleteRoomFacilityById(roomFacilityId: ID!): ID!
	deleteAllRoomFacilityByIds(roomFacilityIds: [ID!]!): [ID!]!
	deleteRoomFacilityExcludingIds(roomFacilityIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
