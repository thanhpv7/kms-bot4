###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type ServiceItem {
	id: ID
	created: String
	modified: String
	applyTo: String
	applyToAllService: Boolean
	coaCOGS: String
	coaInventory: String
	coaSell: String
	classification: String
	serviceItemCode: String
	serviceItemName: String
	services: [Service]
	examinationItems: [ExaminationItem]
	serviceItemAssignments: [ServiceItemAssignment]
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type ServiceItemAudit {
	entity: ServiceItem
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input ServiceItemInput {
	id: ID
	created: String
	modified: String
	applyTo: String
	applyToAllService: Boolean
	coaCOGS: String
	coaInventory: String
	coaSell: String
	classification: String
	serviceItemCode: String
	serviceItemName: String
	services: [ServiceInput]
	servicesIds: [ID!]
	examinationItems: [ExaminationItemInput]
	examinationItemsIds: [ID!]
	serviceItemAssignments: [ServiceItemAssignmentInput]
	serviceItemAssignmentsIds: [ID!]
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countServiceItems(where: [[Where!]!]): Int!
	lastServiceItems(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [ServiceItem!]!
	serviceItems(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [ServiceItem!]!
	serviceItemById(id: ID!): ServiceItem
	serviceItemAudits: [ServiceItemAudit!]!
	serviceItemAuditsByEntityId(serviceItemId: ID!): [ServiceItemAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createServiceItem(serviceItem: ServiceItemInput!, persistRelations: Boolean): ServiceItem!
	createAllServiceItem(serviceItems: [ServiceItemInput!]!): [ServiceItem!]!
	updateServiceItem(serviceItem: ServiceItemInput!, persistRelations: Boolean): ServiceItem!
	updateAllServiceItem(serviceItems: [ServiceItemInput!]!): [ServiceItem!]!
	deleteServiceItemById(serviceItemId: ID!): ID!
	deleteAllServiceItemByIds(serviceItemIds: [ID!]!): [ID!]!
	deleteServiceItemExcludingIds(serviceItemIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
