###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type PurchaseOrder {
	id: ID
	created: String
	modified: String
	expectedDate: String
	extraDiscountInPercent: Boolean
	extraDiscountIncludeTax: Boolean
	extraDiscountValue: Float
	freightFeeIncludeTax: Boolean
	freightFeeValue: Float
	inventoryVATIncluded: Boolean
	notes: String
	orderDate: String
	otherFeeIncludeTax: Boolean
	otherFeeValue: Float
	paymentTerms: String
	priceVATIncluded: Boolean
	purchaseOrderNumber: String
	purchaseOrderType: String
	referenceDocument: String
	shippingMethod: String
	subTotal: Float
	supplierReferenceDocument: String
	supplyStockGroup: String
	taxAmount: Float
	taxBase: Float
	totalAmount: Float
	status: String
	goodsReceiveNote: GoodsReceiveNote
	supplier: Supplier
	warehouse: Warehouse
	purchaseOrderStockDetails: [PurchaseOrderStockDetail]
	purchaseRequisitions: [PurchaseRequisition]
	returnSuppliers: [ReturnSupplier]
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type PurchaseOrderAudit {
	entity: PurchaseOrder
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input PurchaseOrderInput {
	id: ID
	created: String
	modified: String
	expectedDate: String
	extraDiscountInPercent: Boolean
	extraDiscountIncludeTax: Boolean
	extraDiscountValue: Float
	freightFeeIncludeTax: Boolean
	freightFeeValue: Float
	inventoryVATIncluded: Boolean
	notes: String
	orderDate: String
	otherFeeIncludeTax: Boolean
	otherFeeValue: Float
	paymentTerms: String
	priceVATIncluded: Boolean
	purchaseOrderNumber: String
	purchaseOrderType: String
	referenceDocument: String
	shippingMethod: String
	subTotal: Float
	supplierReferenceDocument: String
	supplyStockGroup: String
	taxAmount: Float
	taxBase: Float
	totalAmount: Float
	status: String
	goodsReceiveNote: GoodsReceiveNoteInput
	goodsReceiveNoteId: ID
	supplier: SupplierInput
	supplierId: ID
	warehouse: WarehouseInput
	warehouseId: ID
	purchaseOrderStockDetails: [PurchaseOrderStockDetailInput]
	purchaseOrderStockDetailsIds: [ID!]
	purchaseRequisitions: [PurchaseRequisitionInput]
	purchaseRequisitionsIds: [ID!]
	returnSuppliers: [ReturnSupplierInput]
	returnSuppliersIds: [ID!]
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countPurchaseOrders(where: [[Where!]!]): Int!
	lastPurchaseOrders(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [PurchaseOrder!]!
	purchaseOrders(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [PurchaseOrder!]!
	purchaseOrderById(id: ID!): PurchaseOrder
	purchaseOrderAudits: [PurchaseOrderAudit!]!
	purchaseOrderAuditsByEntityId(purchaseOrderId: ID!): [PurchaseOrderAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createPurchaseOrder(purchaseOrder: PurchaseOrderInput!, persistRelations: Boolean): PurchaseOrder!
	createAllPurchaseOrder(purchaseOrders: [PurchaseOrderInput!]!): [PurchaseOrder!]!
	updatePurchaseOrder(purchaseOrder: PurchaseOrderInput!, persistRelations: Boolean): PurchaseOrder!
	updateAllPurchaseOrder(purchaseOrders: [PurchaseOrderInput!]!): [PurchaseOrder!]!
	deletePurchaseOrderById(purchaseOrderId: ID!): ID!
	deleteAllPurchaseOrderByIds(purchaseOrderIds: [ID!]!): [ID!]!
	deletePurchaseOrderExcludingIds(purchaseOrderIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
