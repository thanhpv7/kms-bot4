###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type BpjsSpecialReferral {
	id: ID
	created: String
	modified: String
	bpjsCardNo: String
	name: String
	ppkDiagnose: String
	referralEndDate: String
	referralID: String
	referralNo: String
	referralStartDate: String
	additionalDiagnose: BpjsDiagnose
	additionalProcedure: BpjsProcedure
	primaryDiagnose: BpjsDiagnose
	primaryProcedure: BpjsProcedure
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type BpjsSpecialReferralAudit {
	entity: BpjsSpecialReferral
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input BpjsSpecialReferralInput {
	id: ID
	created: String
	modified: String
	bpjsCardNo: String
	name: String
	ppkDiagnose: String
	referralEndDate: String
	referralID: String
	referralNo: String
	referralStartDate: String
	additionalDiagnose: BpjsDiagnoseInput
	additionalDiagnoseId: ID
	additionalProcedure: BpjsProcedureInput
	additionalProcedureId: ID
	primaryDiagnose: BpjsDiagnoseInput
	primaryDiagnoseId: ID
	primaryProcedure: BpjsProcedureInput
	primaryProcedureId: ID
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countBpjsSpecialReferrals(where: [[Where!]!]): Int!
	lastBpjsSpecialReferrals(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [BpjsSpecialReferral!]!
	bpjsSpecialReferrals(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [BpjsSpecialReferral!]!
	bpjsSpecialReferralById(id: ID!): BpjsSpecialReferral
	bpjsSpecialReferralAudits: [BpjsSpecialReferralAudit!]!
	bpjsSpecialReferralAuditsByEntityId(bpjsSpecialReferralId: ID!): [BpjsSpecialReferralAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createBpjsSpecialReferral(bpjsSpecialReferral: BpjsSpecialReferralInput!, persistRelations: Boolean): BpjsSpecialReferral!
	createAllBpjsSpecialReferral(bpjsSpecialReferrals: [BpjsSpecialReferralInput!]!): [BpjsSpecialReferral!]!
	updateBpjsSpecialReferral(bpjsSpecialReferral: BpjsSpecialReferralInput!, persistRelations: Boolean): BpjsSpecialReferral!
	updateAllBpjsSpecialReferral(bpjsSpecialReferrals: [BpjsSpecialReferralInput!]!): [BpjsSpecialReferral!]!
	deleteBpjsSpecialReferralById(bpjsSpecialReferralId: ID!): ID!
	deleteAllBpjsSpecialReferralByIds(bpjsSpecialReferralIds: [ID!]!): [ID!]!
	deleteBpjsSpecialReferralExcludingIds(bpjsSpecialReferralIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
