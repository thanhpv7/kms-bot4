###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type Location {
	id: ID
	created: String
	modified: String
	aisle: String
	bin: String
	locationName: String
	shelf: String
	warehouse: Warehouse
	stockControls: [StockControl]
	warehouseInitialStockS: [WarehouseInitialStock]
	warehouseInventories: [WarehouseInventory]
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type LocationAudit {
	entity: Location
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input LocationInput {
	id: ID
	created: String
	modified: String
	aisle: String
	bin: String
	locationName: String
	shelf: String
	warehouse: WarehouseInput
	warehouseId: ID
	stockControls: [StockControlInput]
	stockControlsIds: [ID!]
	warehouseInitialStockS: [WarehouseInitialStockInput]
	warehouseInitialStockSIds: [ID!]
	warehouseInventories: [WarehouseInventoryInput]
	warehouseInventoriesIds: [ID!]
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countLocations(where: [[Where!]!]): Int!
	lastLocations(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [Location!]!
	locations(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [Location!]!
	locationById(id: ID!): Location
	locationAudits: [LocationAudit!]!
	locationAuditsByEntityId(locationId: ID!): [LocationAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createLocation(location: LocationInput!, persistRelations: Boolean): Location!
	createAllLocation(locations: [LocationInput!]!): [Location!]!
	updateLocation(location: LocationInput!, persistRelations: Boolean): Location!
	updateAllLocation(locations: [LocationInput!]!): [Location!]!
	deleteLocationById(locationId: ID!): ID!
	deleteAllLocationByIds(locationIds: [ID!]!): [ID!]!
	deleteLocationExcludingIds(locationIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
