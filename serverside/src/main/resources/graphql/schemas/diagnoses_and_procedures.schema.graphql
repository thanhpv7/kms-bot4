###
# @bot-written
#
# WARNING AND NOTICE
# Any access, download, storage, and/or use of this source code is subject to the terms and conditions of the
# Full Software Licence as accepted by you before being granted access to this source code and other materials,
# the terms of which can be accessed on the Codebots website at https://codebots.com/full-software-licence. Any
# commercial use in contravention of the terms of the Full Software Licence may be pursued by Codebots through
# licence termination and further legal action, and be required to indemnify Codebots for any loss or damage,
# including interest and costs. You are deemed to have accepted the terms of the Full Software Licence on any
# access, download, storage, and/or use of this source code.
#
# BOT WARNING
# This file is bot-written.
# Any changes out side of "protected regions" will be lost next time the bot makes any changes.
###

type DiagnosesAndProcedures {
	id: ID
	created: String
	modified: String
	description: String
	itemCode: String
	itemType: String
	notes: String
	bpjsDiagnose: BpjsDiagnose
	bpjsDiagnosePRB: BpjsDiagnosePRB
	admissionICD10: [Registration]
	admissionICD9CM: [Registration]
	cpptICD10: [DailyCareCPPT]
	cpptICD9CM: [DailyCareCPPT]
	diagnosisNandas: [DiagnosisNanda]
	dischargeICD10: [MedicalCertificateDischargeResume]
	dischargeICD9CM: [MedicalCertificateDischargeResume]
	icd10: [DiagnosisExaminationRecord]
	icd9CM: [DiagnosisExaminationRecord]
	invoicesICD10: [Invoice]
	invoicesICD9CM: [Invoice]
	masterICD10: Icd10
	masterICD9CM: Icd9CM
	postOperativeICD10: [PostOperativeDetails]
	postOperativeICD9CM: [PostOperativeDetails]
	preSurgeryICD10: [PreoperativeRecords]
	preSurgeryICD9CM: [PreoperativeRecords]
	# % protected region % [Add any additional field definition here] off begin
	# % protected region % [Add any additional field definition here] end
}

type DiagnosesAndProceduresAudit {
	entity: DiagnosesAndProcedures
	timestamp: String
	type: AuditQueryType
	authorId: ID
	authorFirstName: String
	authorLastName: String
}

input DiagnosesAndProceduresInput {
	id: ID
	created: String
	modified: String
	description: String
	itemCode: String
	itemType: String
	notes: String
	bpjsDiagnose: BpjsDiagnoseInput
	bpjsDiagnoseId: ID
	bpjsDiagnosePRB: BpjsDiagnosePRBInput
	bpjsDiagnosePRBId: ID
	admissionICD10: [RegistrationInput]
	admissionICD10Ids: [ID!]
	admissionICD9CM: [RegistrationInput]
	admissionICD9CMIds: [ID!]
	cpptICD10: [DailyCareCPPTInput]
	cpptICD10Ids: [ID!]
	cpptICD9CM: [DailyCareCPPTInput]
	cpptICD9CMIds: [ID!]
	diagnosisNandas: [DiagnosisNandaInput]
	diagnosisNandasIds: [ID!]
	dischargeICD10: [MedicalCertificateDischargeResumeInput]
	dischargeICD10Ids: [ID!]
	dischargeICD9CM: [MedicalCertificateDischargeResumeInput]
	dischargeICD9CMIds: [ID!]
	icd10: [DiagnosisExaminationRecordInput]
	icd10Ids: [ID!]
	icd9CM: [DiagnosisExaminationRecordInput]
	icd9CMIds: [ID!]
	invoicesICD10: [InvoiceInput]
	invoicesICD10Ids: [ID!]
	invoicesICD9CM: [InvoiceInput]
	invoicesICD9CMIds: [ID!]
	masterICD10: Icd10Input
	masterICD10Id: ID
	masterICD9CM: Icd9CMInput
	masterICD9CMId: ID
	postOperativeICD10: [PostOperativeDetailsInput]
	postOperativeICD10Ids: [ID!]
	postOperativeICD9CM: [PostOperativeDetailsInput]
	postOperativeICD9CMIds: [ID!]
	preSurgeryICD10: [PreoperativeRecordsInput]
	preSurgeryICD10Ids: [ID!]
	preSurgeryICD9CM: [PreoperativeRecordsInput]
	preSurgeryICD9CMIds: [ID!]
	# % protected region % [Add any additional field definition for input type here] off begin
	# % protected region % [Add any additional field definition for input type here] end
}

extend type Query {
	countDiagnosesAndProceduress(where: [[Where!]!]): Int!
	lastDiagnosesAndProceduress(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!]! = [], where: [[Where!]!] = []): [DiagnosesAndProcedures!]!
	diagnosesAndProceduress(pageIndex: Int = 0, pageSize: Int = 10, orderBy: [OrderBy!] = [], where: [[Where!]!] = []): [DiagnosesAndProcedures!]!
	diagnosesAndProceduresById(id: ID!): DiagnosesAndProcedures
	diagnosesAndProceduresAudits: [DiagnosesAndProceduresAudit!]!
	diagnosesAndProceduresAuditsByEntityId(diagnosesAndProceduresId: ID!): [DiagnosesAndProceduresAudit!]!
	# % protected region % [Add any additional query definition here] off begin
	# % protected region % [Add any additional query definition here] end
}

extend type Mutation {
	createDiagnosesAndProcedures(diagnosesAndProcedures: DiagnosesAndProceduresInput!, persistRelations: Boolean): DiagnosesAndProcedures!
	createAllDiagnosesAndProcedures(diagnosesAndProceduress: [DiagnosesAndProceduresInput!]!): [DiagnosesAndProcedures!]!
	updateDiagnosesAndProcedures(diagnosesAndProcedures: DiagnosesAndProceduresInput!, persistRelations: Boolean): DiagnosesAndProcedures!
	updateAllDiagnosesAndProcedures(diagnosesAndProceduress: [DiagnosesAndProceduresInput!]!): [DiagnosesAndProcedures!]!
	deleteDiagnosesAndProceduresById(diagnosesAndProceduresId: ID!): ID!
	deleteAllDiagnosesAndProceduresByIds(diagnosesAndProceduresIds: [ID!]!): [ID!]!
	deleteDiagnosesAndProceduresExcludingIds(diagnosesAndProceduresIds: [ID!]!): [ID!]!
	# % protected region % [Add any additional mutation definition here] off begin
	# % protected region % [Add any additional mutation definition here] end
}

# % protected region % [Add additional schema definition here] off begin
# % protected region % [Add additional schema definition here] end
